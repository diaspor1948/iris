###Suport Vector Machine
import seaborn as sns

iris = sns.load_dataset('iris')

iris.head()

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

sns.pairplot(iris,hue='species')

setosa = iris[iris['species']=='setosa']

sns.kdeplot(setosa['sepal_width'],setosa['sepal_length'],cmap='plasma',shade=True,shade_lowest=False)

sns.kdeplot(iris['sepal_width'],iris['sepal_length'],)

#Traing Data
from sklearn.model_selection import train_test_split

x = iris.drop('species',axis=1)

y = iris['species']

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=.3)

#Data Modeling
from sklearn.svm import SVC

model = SVC

model.fit(x_train,y_train)

#Prediction and Conculsion 
prediction = model.predict(x_test)

from sklearn.metrics import confusion_matrix,classification_report

print(confusion_matrix(y_test,predictions))

print(classification_report(y_test,predictions))
